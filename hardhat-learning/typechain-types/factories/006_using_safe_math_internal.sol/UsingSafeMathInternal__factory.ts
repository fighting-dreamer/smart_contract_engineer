/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UsingSafeMathInternal,
  UsingSafeMathInternalInterface,
} from "../../006_using_safe_math_internal.sol/UsingSafeMathInternal";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "doAddition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "doSubtraction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506101f28061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638cbc6ba61461003b5780639638c4aa14610060575b600080fd5b61004e61004936600461015e565b610073565b60405190815260200160405180910390f35b61004e61006e36600461015e565b610088565b600061007f8383610094565b90505b92915050565b600061007f83836100ff565b6000828211156100eb5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000060448201526064015b60405180910390fd5b60006100f78385610196565b949350505050565b60008061010c83856101a9565b90508381101561007f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016100e2565b6000806040838503121561017157600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b8181038181111561008257610082610180565b808201808211156100825761008261018056fea26469706673582212203e316120c0b156ed51eec60918c88e1f68a700aa2fc8046825911a8215d4948c64736f6c634300081a0033";

type UsingSafeMathInternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsingSafeMathInternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsingSafeMathInternal__factory extends ContractFactory {
  constructor(...args: UsingSafeMathInternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UsingSafeMathInternal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UsingSafeMathInternal__factory {
    return super.connect(runner) as UsingSafeMathInternal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsingSafeMathInternalInterface {
    return new Interface(_abi) as UsingSafeMathInternalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UsingSafeMathInternal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UsingSafeMathInternal;
  }
}
