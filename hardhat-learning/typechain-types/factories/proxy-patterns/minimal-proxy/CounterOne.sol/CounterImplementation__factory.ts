/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CounterImplementation,
  CounterImplementationInterface,
} from "../../../../proxy-patterns/minimal-proxy/CounterOne.sol/CounterImplementation";

const _abi = [
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "inc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506101548061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063371303c01461004657806361bc221a14610050578063b3bcfa821461006b575b600080fd5b61004e610073565b005b61005960005481565b60405190815260200160405180910390f35b61004e610086565b6000546100819060016100f2565b600055565b60008054116100cd5760405162461bcd60e51b815260206004820152600f60248201526e436f75746e6572206973207a65726f60881b604482015260640160405180910390fd5b6001600054610081919061010b565b634e487b7160e01b600052601160045260246000fd5b80820180821115610105576101056100dc565b92915050565b81810381811115610105576101056100dc56fea264697066735822122062b8ef079799d3140a56daceb79dd96dbb3ad960d41fc55854274330ca38cbfe64736f6c634300081a0033";

type CounterImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CounterImplementation__factory extends ContractFactory {
  constructor(...args: CounterImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CounterImplementation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CounterImplementation__factory {
    return super.connect(runner) as CounterImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterImplementationInterface {
    return new Interface(_abi) as CounterImplementationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CounterImplementation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CounterImplementation;
  }
}
