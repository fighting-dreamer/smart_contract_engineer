/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleProxy,
  SimpleProxyInterface,
} from "../../../proxy-patterns/eip1967_upgradable_proxy/SimpleProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50337fb53127684a568b3173ae13b9f8a6016eaf15eb9e8e9f03347e2db6a3ec1e1cb055610280806100426000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d784d4261461015d575b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009036906060906001600160a01b0381166100a95760405162461bcd60e51b8152602060048201526016602482015275125b5c1b195b595b9d185d1a5bdb881b9bdd081cd95d60521b60448201526064015b60405180910390fd5b600080826001600160a01b031686866040516100c692919061020a565b600060405180830381855af49150503d8060008114610101576040519150601f19603f3d011682016040523d82523d6000602084013e610106565b606091505b50915091508161014f5760405162461bcd60e51b815260206004820152601460248201527311195b1959d85d194810d85b1b0811985a5b195960621b60448201526064016100a0565b805195506020019350505050f35b61017061016b36600461021a565b610172565b005b7fb53127684a568b3173ae13b9f8a6016eaf15eb9e8e9f03347e2db6a3ec1e1cb0546001600160a01b03811633146101e55760405162461bcd60e51b81526020600482015260166024820152752737ba103a34329031b7b73a3930b1ba1027bbb732b960511b60448201526064016100a0565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b8183823760009101908152919050565b60006020828403121561022c57600080fd5b81356001600160a01b038116811461024357600080fd5b939250505056fea264697066735822122054e6fbca5d91054284f73750bdd6fc87ce14602ad85a69a535dbafbf15bb0d9164736f6c634300081a0033";

type SimpleProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleProxy__factory extends ContractFactory {
  constructor(...args: SimpleProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleProxy__factory {
    return super.connect(runner) as SimpleProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleProxyInterface {
    return new Interface(_abi) as SimpleProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleProxy {
    return new Contract(address, _abi, runner) as unknown as SimpleProxy;
  }
}
