/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyExternalSafeMath,
  MyExternalSafeMathInterface,
} from "../../../library/my_external_safe_math.sol/MyExternalSafeMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "identity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a66037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063ac37eebb146038575b600080fd5b604660433660046058565b90565b60405190815260200160405180910390f35b600060208284031215606957600080fd5b503591905056fea26469706673582212200d088f65d59afb5c9067df7f42d9d9d02f3ad6952a8d20a7bb7d7845c5e4158d64736f6c634300081a0033";

type MyExternalSafeMathConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyExternalSafeMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyExternalSafeMath__factory extends ContractFactory {
  constructor(...args: MyExternalSafeMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyExternalSafeMath & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyExternalSafeMath__factory {
    return super.connect(runner) as MyExternalSafeMath__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyExternalSafeMathInterface {
    return new Interface(_abi) as MyExternalSafeMathInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MyExternalSafeMath {
    return new Contract(address, _abi, runner) as unknown as MyExternalSafeMath;
  }
}
