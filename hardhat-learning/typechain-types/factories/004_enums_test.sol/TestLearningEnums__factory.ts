/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TestLearningEnums,
  TestLearningEnumsInterface,
} from "../../004_enums_test.sol/TestLearningEnums";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum LearnEnums.OrderState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "OrderStateChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState",
        name: "currState",
        type: "uint8",
      },
      {
        internalType: "enum LearnEnums.OrderState",
        name: "nextState",
        type: "uint8",
      },
    ],
    name: "addOrderStateInTransitionMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "debugGetOrderStates",
    outputs: [
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "getStateTransitionMap",
    outputs: [
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState",
        name: "currState",
        type: "uint8",
      },
      {
        internalType: "enum LearnEnums.OrderState",
        name: "removableState",
        type: "uint8",
      },
    ],
    name: "removeOrderStateTransitionMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stateTransitionMap",
    outputs: [
      {
        internalType: "enum LearnEnums.OrderState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "currNextStates",
        type: "uint8[]",
      },
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "nextStates",
        type: "uint8[]",
      },
    ],
    name: "testAreSameNextStates",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "arr",
        type: "uint8[]",
      },
    ],
    name: "testComputeArrayHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "arr",
        type: "uint8[]",
      },
      {
        internalType: "enum LearnEnums.OrderState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "testContainsOrderState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "_inputOrderStates",
        type: "uint8[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "testRemoveOrderState",
    outputs: [
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LearnEnums.OrderState",
        name: "currState",
        type: "uint8",
      },
      {
        internalType: "enum LearnEnums.OrderState[]",
        name: "nextStates",
        type: "uint8[]",
      },
    ],
    name: "updateStateTransitionMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060408051602080820190925260018082526000805291829052610056917fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4991906101cc565b50604080516060810190915280600381526020016002815260200160069052600160008181526020810191909152604001600020610095916003610280565b50604080518082019091526003815260066020808301919091526002600081905260019091526100e6917fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f916102f5565b5060408051602080820190925260048152600360005260019182905261012e917f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b91906101cc565b50604080516020808201909252600581526004600052600191829052610176917fedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b56764391906101cc565b50604080518082019091526008815260076020808301919091526006600052600190526101c6907f8f331abe73332f95a25873e8b430885974c0409691f89d643119a11623a7924a9060026102f5565b50610395565b82805482825590600052602060002090601f016020900481019282156102705791602002820160005b8382111561024157835183826101000a81548160ff021916908360088111156102205761022061037f565b021790555092602001926001016020816000010492830192600103026101f5565b801561026e5782816101000a81549060ff0219169055600101602081600001049283019260010302610241565b505b5061027c92915061036a565b5090565b82805482825590600052602060002090601f016020900481019282156102705791602002820160005b8382111561024157835183826101000a81548160ff021916908360088111156102d4576102d461037f565b021790555092602001926001016020816000010492830192600103026102a9565b82805482825590600052602060002090601f016020900481019282156102705791602002820160005b8382111561024157835183826101000a81548160ff021916908360088111156103495761034961037f565b0217905550926020019260010160208160000104928301926001030261031e565b5b8082111561027c576000815560010161036b565b634e487b7160e01b600052602160045260246000fd5b6110a0806103a46000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80636e8fd601116100665780636e8fd6011461013d578063921e28e21461015d5780639384c44d14610180578063a0d10e8d14610188578063ca954c2a1461019b57600080fd5b8063045e6413146100a357806346081143146100b857806356e73ea6146100e1578063647adb31146100f45780636c38f2a11461011c575b600080fd5b6100b66100b1366004610c00565b6101ae565b005b6100cb6100c6366004610c33565b6102f5565b6040516100d89190610c95565b60405180910390f35b6100b66100ef366004610ce8565b610338565b610107610102366004610d3b565b610476565b604080519283529015156020830152016100d8565b61012f61012a366004610d8f565b6104c3565b6040519081526020016100d8565b61015061014b366004610dd1565b61050a565b6040516100d89190610e1d565b61017061016b366004610f24565b6105ae565b60405190151581526020016100d8565b6101506105ba565b610150610196366004610f8d565b610642565b6100b66101a9366004610c00565b6106ff565b600061026d600160008560088111156101c9576101c9610c5d565b60088111156101da576101da610c5d565b815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561026257602002820191906000526020600020906000905b82829054906101000a900460ff16600881111561024057610240610c5d565b8152602060019283018181049485019490930390920291018084116102215790505b505050505083610807565b915050806102f0576001600084600881111561028b5761028b610c5d565b600881111561029c5761029c610c5d565b8152602080820192909252604001600090812080546001810182559082529082902091810490910180548492601f166101000a60ff810219909116908360088111156102ea576102ea610c5d565b02179055505b505050565b6001602052816000526040600020818154811061031157600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b6104286001600085600881111561035157610351610c5d565b600881111561036257610362610c5d565b81526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103ea57602002820191906000526020600020906000905b82829054906101000a900460ff1660088111156103c8576103c8610c5d565b8152602060019283018181049485019490930390920291018084116103a95790505b505050505083838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061087b92505050565b6102f05781816001600086600881111561044457610444610c5d565b600881111561045557610455610c5d565b81526020019081526020016000209190610470929190610b13565b50505050565b6000806104b7858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250879250610807915050565b91509150935093915050565b60006105018383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108b092505050565b90505b92915050565b606061051860008585610b13565b50610524600083610a07565b60008054806020026020016040519081016040528092919081815260200182805480156105a057602002820191906000526020600020906000905b82829054906101000a900460ff16600881111561057e5761057e610c5d565b81526020600192830181810494850194909303909202910180841161055f5790505b505050505090509392505050565b6000610501838361087b565b6060600080548060200260200160405190810160405280929190818152602001828054801561063857602002820191906000526020600020906000905b82829054906101000a900460ff16600881111561061657610616610c5d565b8152602060019283018181049485019490930390920291018084116105f75790505b5050505050905090565b60606001600083600881111561065a5761065a610c5d565b600881111561066b5761066b610c5d565b81526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106f357602002820191906000526020600020906000905b82829054906101000a900460ff1660088111156106d1576106d1610c5d565b8152602060019283018181049485019490930390920291018084116106b25790505b50505050509050919050565b6000806107bf6001600086600881111561071b5761071b610c5d565b600881111561072c5761072c610c5d565b81526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156107b457602002820191906000526020600020906000905b82829054906101000a900460ff16600881111561079257610792610c5d565b8152602060019283018181049485019490930390920291018084116107735790505b505050505084610807565b91509150801561047057610470600160008660088111156107e2576107e2610c5d565b60088111156107f3576107f3610c5d565b815260200190815260200160002083610a07565b60008060005b845181101561086b5783600881111561082857610828610c5d565b85828151811061083a5761083a610fa8565b6020026020010151600881111561085357610853610c5d565b0361086357915060019050610874565b60010161080d565b50600080915091505b9250929050565b805182516000911480610892576000915050610504565b600061089d846108b0565b6108a6866108b0565b1495945050505050565b6000806108bf60086001610fd4565b905060008167ffffffffffffffff8111156108dc576108dc610e68565b604051908082528060200260200182016040528015610905578160200160208202803683370190505b50905060005b845181101561097f57600085828151811061092857610928610fa8565b6020026020010151600881111561094157610941610c5d565b9050838160ff161015610976576001838260ff168151811061096557610965610fa8565b911515602092830291909101909101525b5060010161090b565b50604080516020810190915260008082525b838110156109f6578281815181106109ab576109ab610fa8565b6020026020010151156109ee57818160088111156109cb576109cb610c5d565b6040516020016109dc929190610fe7565b60405160208183030381529060405291505b600101610991565b508051602090910120949350505050565b81548110610a4b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640160405180910390fd5b81548290610a5b90600190611041565b81548110610a6b57610a6b610fa8565b90600052602060002090602091828204019190069054906101000a900460ff16828281548110610a9d57610a9d610fa8565b90600052602060002090602091828204019190066101000a81548160ff02191690836008811115610ad057610ad0610c5d565b021790555081805480610ae557610ae5611054565b60019003818190600052602060002090602091828204019190066101000a81549060ff021916905590555050565b82805482825590600052602060002090601f01602090048101928215610bc75791602002820160005b83821115610b98578335600881118015610b5557600080fd5b5083826101000a81548160ff02191690836008811115610b7757610b77610c5d565b02179055509260200192600101602081600001049283019260010302610b3c565b8015610bc55782816101000a81549060ff0219169055600101602081600001049283019260010302610b98565b505b50610bd3929150610bd7565b5090565b5b80821115610bd35760008155600101610bd8565b803560098110610bfb57600080fd5b919050565b60008060408385031215610c1357600080fd5b610c1c83610bec565b9150610c2a60208401610bec565b90509250929050565b60008060408385031215610c4657600080fd5b610c4f83610bec565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60098110610c9157634e487b7160e01b600052602160045260246000fd5b9052565b602081016105048284610c73565b60008083601f840112610cb557600080fd5b50813567ffffffffffffffff811115610ccd57600080fd5b6020830191508360208260051b850101111561087457600080fd5b600080600060408486031215610cfd57600080fd5b610d0684610bec565b9250602084013567ffffffffffffffff811115610d2257600080fd5b610d2e86828701610ca3565b9497909650939450505050565b600080600060408486031215610d5057600080fd5b833567ffffffffffffffff811115610d6757600080fd5b610d7386828701610ca3565b9094509250610d86905060208501610bec565b90509250925092565b60008060208385031215610da257600080fd5b823567ffffffffffffffff811115610db957600080fd5b610dc585828601610ca3565b90969095509350505050565b600080600060408486031215610de657600080fd5b833567ffffffffffffffff811115610dfd57600080fd5b610e0986828701610ca3565b909790965060209590950135949350505050565b602080825282518282018190526000918401906040840190835b81811015610e5d57610e4a838551610c73565b6020938401939290920191600101610e37565b509095945050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e8f57600080fd5b813567ffffffffffffffff811115610ea957610ea9610e68565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715610ed657610ed6610e68565b604052918252602081850181019290810186841115610ef457600080fd5b6020860192505b83831015610f1a57610f0c83610bec565b815260209283019201610efb565b5095945050505050565b60008060408385031215610f3757600080fd5b823567ffffffffffffffff811115610f4e57600080fd5b610f5a85828601610e7e565b925050602083013567ffffffffffffffff811115610f7757600080fd5b610f8385828601610e7e565b9150509250929050565b600060208284031215610f9f57600080fd5b61050182610bec565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561050457610504610fbe565b6000835160005b818110156110085760208187018101518583015201610fee565b5060009083019081526009841061102f57634e487b7160e01b600052602160045260246000fd5b60f89390931b83525050600101919050565b8181038181111561050457610504610fbe565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200b8d15ff5c81bef3eaf69d6cc567cc05cc0859f9d8c9df89a501528a5402935464736f6c634300081a0033";

type TestLearningEnumsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestLearningEnumsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestLearningEnums__factory extends ContractFactory {
  constructor(...args: TestLearningEnumsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestLearningEnums & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestLearningEnums__factory {
    return super.connect(runner) as TestLearningEnums__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestLearningEnumsInterface {
    return new Interface(_abi) as TestLearningEnumsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestLearningEnums {
    return new Contract(address, _abi, runner) as unknown as TestLearningEnums;
  }
}
