/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "HelloWorld",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HelloWorld__factory>;
    getContractFactory(
      name: "Counter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Counter__factory>;
    getContractFactory(
      name: "Operations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Operations__factory>;
    getContractFactory(
      name: "TestLearningEnums",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLearningEnums__factory>;
    getContractFactory(
      name: "LearnEnums",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LearnEnums__factory>;
    getContractFactory(
      name: "UserDefinedValueTypesExamples",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UserDefinedValueTypesExamples__factory>;
    getContractFactory(
      name: "UsingSafeMathInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UsingSafeMathInternal__factory>;
    getContractFactory(
      name: "UsingSafeMathExternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UsingSafeMathExternal__factory>;
    getContractFactory(
      name: "OrderAccounting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrderAccounting__factory>;
    getContractFactory(
      name: "A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.A__factory>;
    getContractFactory(
      name: "B",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.B__factory>;
    getContractFactory(
      name: "C",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.C__factory>;
    getContractFactory(
      name: "D",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.D__factory>;
    getContractFactory(
      name: "MyExternalSafeMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyExternalSafeMath__factory>;
    getContractFactory(
      name: "Lock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lock__factory>;
    getContractFactory(
      name: "BuggyProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BuggyProxy__factory>;
    getContractFactory(
      name: "ImplementationEIP1967Three",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImplementationEIP1967Three__factory>;
    getContractFactory(
      name: "ImplementationEIP1967Two",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImplementationEIP1967Two__factory>;
    getContractFactory(
      name: "ImplementationEIP1967One",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImplementationEIP1967One__factory>;
    getContractFactory(
      name: "SimpleProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleProxy__factory>;
    getContractFactory(
      name: "MinimalProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinimalProxy__factory>;
    getContractFactory(
      name: "CounterImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CounterImplementation__factory>;
    getContractFactory(
      name: "MinimalProxyOne",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinimalProxyOne__factory>;

    getContractAt(
      name: "HelloWorld",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HelloWorld>;
    getContractAt(
      name: "Counter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Counter>;
    getContractAt(
      name: "Operations",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Operations>;
    getContractAt(
      name: "TestLearningEnums",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLearningEnums>;
    getContractAt(
      name: "LearnEnums",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LearnEnums>;
    getContractAt(
      name: "UserDefinedValueTypesExamples",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UserDefinedValueTypesExamples>;
    getContractAt(
      name: "UsingSafeMathInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UsingSafeMathInternal>;
    getContractAt(
      name: "UsingSafeMathExternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UsingSafeMathExternal>;
    getContractAt(
      name: "OrderAccounting",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OrderAccounting>;
    getContractAt(
      name: "A",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.A>;
    getContractAt(
      name: "B",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.B>;
    getContractAt(
      name: "C",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.C>;
    getContractAt(
      name: "D",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.D>;
    getContractAt(
      name: "MyExternalSafeMath",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyExternalSafeMath>;
    getContractAt(
      name: "Lock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Lock>;
    getContractAt(
      name: "BuggyProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BuggyProxy>;
    getContractAt(
      name: "ImplementationEIP1967Three",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ImplementationEIP1967Three>;
    getContractAt(
      name: "ImplementationEIP1967Two",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ImplementationEIP1967Two>;
    getContractAt(
      name: "ImplementationEIP1967One",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ImplementationEIP1967One>;
    getContractAt(
      name: "SimpleProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleProxy>;
    getContractAt(
      name: "MinimalProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MinimalProxy>;
    getContractAt(
      name: "CounterImplementation",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CounterImplementation>;
    getContractAt(
      name: "MinimalProxyOne",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MinimalProxyOne>;

    deployContract(
      name: "HelloWorld",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HelloWorld>;
    deployContract(
      name: "Counter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Counter>;
    deployContract(
      name: "Operations",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Operations>;
    deployContract(
      name: "TestLearningEnums",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestLearningEnums>;
    deployContract(
      name: "LearnEnums",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LearnEnums>;
    deployContract(
      name: "UserDefinedValueTypesExamples",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UserDefinedValueTypesExamples>;
    deployContract(
      name: "UsingSafeMathInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UsingSafeMathInternal>;
    deployContract(
      name: "UsingSafeMathExternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UsingSafeMathExternal>;
    deployContract(
      name: "OrderAccounting",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OrderAccounting>;
    deployContract(
      name: "A",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.A>;
    deployContract(
      name: "B",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B>;
    deployContract(
      name: "C",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.C>;
    deployContract(
      name: "D",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.D>;
    deployContract(
      name: "MyExternalSafeMath",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyExternalSafeMath>;
    deployContract(
      name: "Lock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Lock>;
    deployContract(
      name: "BuggyProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BuggyProxy>;
    deployContract(
      name: "ImplementationEIP1967Three",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ImplementationEIP1967Three>;
    deployContract(
      name: "ImplementationEIP1967Two",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ImplementationEIP1967Two>;
    deployContract(
      name: "ImplementationEIP1967One",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ImplementationEIP1967One>;
    deployContract(
      name: "SimpleProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleProxy>;
    deployContract(
      name: "MinimalProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MinimalProxy>;
    deployContract(
      name: "CounterImplementation",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CounterImplementation>;
    deployContract(
      name: "MinimalProxyOne",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MinimalProxyOne>;

    deployContract(
      name: "HelloWorld",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HelloWorld>;
    deployContract(
      name: "Counter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Counter>;
    deployContract(
      name: "Operations",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Operations>;
    deployContract(
      name: "TestLearningEnums",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestLearningEnums>;
    deployContract(
      name: "LearnEnums",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LearnEnums>;
    deployContract(
      name: "UserDefinedValueTypesExamples",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UserDefinedValueTypesExamples>;
    deployContract(
      name: "UsingSafeMathInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UsingSafeMathInternal>;
    deployContract(
      name: "UsingSafeMathExternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UsingSafeMathExternal>;
    deployContract(
      name: "OrderAccounting",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OrderAccounting>;
    deployContract(
      name: "A",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.A>;
    deployContract(
      name: "B",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B>;
    deployContract(
      name: "C",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.C>;
    deployContract(
      name: "D",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.D>;
    deployContract(
      name: "MyExternalSafeMath",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyExternalSafeMath>;
    deployContract(
      name: "Lock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Lock>;
    deployContract(
      name: "BuggyProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BuggyProxy>;
    deployContract(
      name: "ImplementationEIP1967Three",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ImplementationEIP1967Three>;
    deployContract(
      name: "ImplementationEIP1967Two",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ImplementationEIP1967Two>;
    deployContract(
      name: "ImplementationEIP1967One",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ImplementationEIP1967One>;
    deployContract(
      name: "SimpleProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleProxy>;
    deployContract(
      name: "MinimalProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MinimalProxy>;
    deployContract(
      name: "CounterImplementation",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CounterImplementation>;
    deployContract(
      name: "MinimalProxyOne",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MinimalProxyOne>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
